apiVersion: v1
kind: Namespace
metadata:
  name: movies-app
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: movies-app
type: Opaque
stringData:
  DB_USER: root
  DB_PASS: root
  DB_NAME: api-kubernetes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: movies-app
data:
  DB_HOST: host.docker.internal
  DB_PORT: "3306"
  DB_CHARSET: "utf8mb4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movies-api
  namespace: movies-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movies-api
  template:
    metadata:
      labels:
        app: movies-api
    spec:
      containers:
      - name: movies-api
        image: filipposaglimbene94/api-movies:local
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_PORT
        - name: DB_CHARSET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_CHARSET
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASS
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: movies-api-service
  namespace: movies-app
spec:
  selector:
    app: movies-api
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
